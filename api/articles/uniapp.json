{"title":"uniapp","slug":"uniapp","date":"2025-02-02T13:57:00.197Z","updated":"2025-02-02T13:56:46.244Z","comments":true,"path":"api/articles/uniapp.json","photos":[],"excerpt":null,"covers":["https://i-blog.csdnimg.cn/direct/52327192c2f94f36af2b07b453642340.png","https://i-blog.csdnimg.cn/direct/686773b28e31494bb8ccea5b9f9ff513.png","https://i-blog.csdnimg.cn/direct/03683774aac048be8de23f924687279f.png","https://i-blog.csdnimg.cn/direct/e5279e8ccc684f2bba3e721c96957087.png","https://i-blog.csdnimg.cn/direct/a69dcc0e975a43c2a0258524bc052fde.png","https://i-blog.csdnimg.cn/direct/ef5aa06a7fc34a0b974b5b91868d1f26.png","https://i-blog.csdnimg.cn/direct/66fc64c3c3dd46afaa3b8f38a4b127b1.png","https://i-blog.csdnimg.cn/direct/4ca5f96b0c634a9ea4a7dab3ed946b1b.png","https://i-blog.csdnimg.cn/direct/afbd4f155d5a4b40b0891d89ef6e303b.png","https://i-blog.csdnimg.cn/direct/3ebc8116e4c34358a339cf8b683e9a98.png","https://i-blog.csdnimg.cn/direct/60462bd1328f488fbe9017d867a330b7.png"],"content":"<p>新页面标题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;pages&quot;: [ //pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t&quot;path&quot;: &quot;pages/index/index&quot;,</span><br><span class=\"line\">\t\t\t&quot;style&quot;: &#123;</span><br><span class=\"line\">\t\t\t\t&quot;navigationBarTitleText&quot;: &quot;某某标题&quot;//新页面标题</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br></pre></td></tr></table></figure>\n<p><strong>浏览器改地址显示新页面</strong></p>\n<ul>\n<li>pages节点的第一项为应用入口页（即首页）</li>\n<li>应用中新增&#x2F;减少页面，都需要对 pages 数组进行修改</li>\n<li>文件名不需要写后缀，框架会自动寻找路径下的页面资源</li>\n</ul>\n<h1 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h1><h2 id=\"veiw\"><a href=\"#veiw\" class=\"headerlink\" title=\"veiw\"></a>veiw</h2><p>view标签比div标签更强，是uniapp自己封装的组件。<br>类似以前用的div。</p>\n<blockquote>\n<p><code>hover-stop-propagation</code><br><code>解决冒泡</code>,默认为true<br>指定是否阻止本节点的祖先节点出现点击态，App、H5、支付宝小程序、百度小程序不支持（支付宝小程序、百度小程序文档中都有此属性，实测未支持）</p>\n</blockquote>\n<p><img src=\"https://i-blog.csdnimg.cn/direct/52327192c2f94f36af2b07b453642340.png\" alt=\"在这里插入图片描述\"><br>1)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.out &#123;</span><br><span class=\"line\">\t.box &#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>会自动解析为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.out .box &#123; &#125;</span><br></pre></td></tr></table></figure>\n<p>2）<br>rpx：响应式单位。<br>换言之，页面元素宽度在 uni-app 中的宽度计算公式：</p>\n<blockquote>\n<p>750 * 元素在设计稿中的宽度 &#x2F; 设计稿基准宽度</p>\n</blockquote>\n<p>例：</p>\n<ul>\n<li>若设计稿宽度为 750px，元素 A 在设计稿上的宽度为 100px，那么元素 A 在 uni-app 里面的宽度应该设为：750 * 100 &#x2F; 750，结果为：100rpx。</li>\n<li>若设计稿宽度为 640px，元素 A 在设计稿上的宽度为 100px，那么元素 A 在 uni-app 里面的宽度应该设为：750 * 100 &#x2F; 640，结果为：117rpx。</li>\n<li>若设计稿宽度为 375px，元素 B 在设计稿上的宽度为 200px，那么元素 B 在 uni-app 里面的宽度应该设为： 750 * 200 &#x2F; 375，结果为：400rpx。</li>\n</ul>\n<h2 id=\"text-文本组件-行标签-span\"><a href=\"#text-文本组件-行标签-span\" class=\"headerlink\" title=\"text 文本组件 行标签 span\"></a>text 文本组件 行标签 span</h2><p>text替换之前的span标签。<br><img src=\"https://i-blog.csdnimg.cn/direct/686773b28e31494bb8ccea5b9f9ff513.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"scroll-view组件-可滚动视图容器\"><a href=\"#scroll-view组件-可滚动视图容器\" class=\"headerlink\" title=\"scroll-view组件 可滚动视图容器\"></a>scroll-view组件 可滚动视图容器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;scroll-view :scroll-top=&quot;scrollTop&quot; scroll-y class=&quot;scrollView&quot; &gt;</span><br><span class=\"line\">\t\t\t&lt;view class=&quot;box&quot;&gt;&lt;/view&gt;</span><br><span class=\"line\">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure>\n<p><code>**横向滚动**：</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.scrollView&#123;</span><br><span class=\"line\">\t\twhite-space:nowrap;//不换行</span><br><span class=\"line\">\t\t.box&#123;</span><br><span class=\"line\">\t\t\t\tdispaly:inline-block;//转换</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"swiper组件-滑块视图容器\"><a href=\"#swiper组件-滑块视图容器\" class=\"headerlink\" title=\"swiper组件 滑块视图容器\"></a>swiper组件 滑块视图容器</h2><p>与scroll-view左右滑动不同，swiper每次就滑动一屏。</p>\n<p>swiper-item，swiper的子元素</p>\n<p><swiper>可加上的属性<br>circular，即循环滑动。<code>默认为true</code><br>indicator-dots，是否显示面板指示点.<code>默认为true</code></swiper></p>\n<p>indicator-color&#x3D;”除去选中的点其他的默认指示点颜色”<br>indicator-active-color&#x3D;”当前选中的指示点颜色”<br>autoplay  自动切换时间  <code>默认为true</code><br>interval设置切换时间，单位毫秒</p>\n<h2 id=\"image-图片组件\"><a href=\"#image-图片组件\" class=\"headerlink\" title=\"image 图片组件\"></a>image 图片组件</h2><p>mage和video是最常用的媒体组件。audio（音频）和video（视频）几乎一样。camera是相机组件。</p>\n<p>image标签的使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;image src=&quot;/static/logo.png&quot; mode=&quot;&quot;&gt;&lt;/image&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>scaleToFill  不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素</li>\n<li>aspectFit    保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。</li>\n<li>aspectFill   保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取。</li>\n</ol>\n<h2 id=\"navigator-页面跳转组件\"><a href=\"#navigator-页面跳转组件\" class=\"headerlink\" title=\"navigator 页面跳转组件\"></a>navigator 页面跳转组件</h2><p>该组件类似html的a组件，但只能跳转本地页面。目标页面必须在pages.json中注册。<br><img src=\"https://i-blog.csdnimg.cn/direct/03683774aac048be8de23f924687279f.png\" alt=\"在这里插入图片描述\"></p>\n<p>在index页面添加一个navigator组件</p>\n<h4 id=\"1-url\"><a href=\"#1-url\" class=\"headerlink\" title=\"1.url\"></a>1.url</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;navigator url=&quot;/pages/list/list&quot;&gt;新闻列表&lt;/navigator&gt;</span><br></pre></td></tr></table></figure>\n<p>点击标题左边的箭头，可以返回上一个页面。</p>\n<h4 id=\"2-open-type\"><a href=\"#2-open-type\" class=\"headerlink\" title=\"2.open-type\"></a>2.open-type</h4><p>这是open-type属性控制的，默认取值是navigate。</p>\n<p>reLaunch<br>关闭所有页面，打开到应用内的某个页面。<br>无法点击返回箭头返回</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open-type=&quot;reLaunch&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"表单组件\"><a href=\"#表单组件\" class=\"headerlink\" title=\"表单组件\"></a>表单组件</h2><h4 id=\"1-button\"><a href=\"#1-button\" class=\"headerlink\" title=\"1. button\"></a>1. button</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button size=&quot;mini&quot;&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>button的属性:<br>size属性，有default最大、mini属性。<br>type，type属性有default、primary和warn三种类型。<br>plain，是否镂空，为false表示不镂空，为true表示镂空。<br>loading，显示加载中。<br>form-type，用于form组件，点击分别会触发form组建的submit和reset事件。<br>剩下就是只有某些平台才能用的属性了。</li>\n</ul>\n<h4 id=\"2-input\"><a href=\"#2-input\" class=\"headerlink\" title=\"2. input\"></a>2. input</h4><p>html规范中input不仅是输入框，还有radio、checkbox、时间、日期、文件选择功能。在uni-app规范中，input仅仅是输入框。其他功能uni-app有单独的组件或API<br>此外还有picker，平台差异化，所以也就不说了。</p>\n<p>uView还提供了Calendar日历，Slider滑动选择器，Picker选择器，效果更好一些</p>\n<h2 id=\"模板语法\"><a href=\"#模板语法\" class=\"headerlink\" title=\"模板语法\"></a>模板语法</h2><p>插值语法<br><img src=\"https://i-blog.csdnimg.cn/direct/e5279e8ccc684f2bba3e721c96957087.png\"></p>\n<h2 id=\"data属性\"><a href=\"#data属性\" class=\"headerlink\" title=\"data属性\"></a>data属性</h2><p>data 必须声明为返回一个初始数据对象的函数。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">///正确用法，使用函数返回对象</span><br><span class=\"line\">data()&#123;</span><br><span class=\"line\">\t\treturn&#123;</span><br><span class=\"line\">\t\t\ttitle:&#x27;Hello&#x27;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>data里写一个return，return 返回一个对象，拿到对象的所有属性</p>\n<h2 id=\"条件渲染\"><a href=\"#条件渲染\" class=\"headerlink\" title=\"条件渲染\"></a>条件渲染</h2><h4 id=\"v-if和v-else\"><a href=\"#v-if和v-else\" class=\"headerlink\" title=\"v-if和v-else\"></a>v-if和v-else</h4><p>v-if会读取state的值，是true的话就会显示obj.age，false的话就不显示。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-if=&quot;obj.state&quot;&gt; &#123;&#123;obj.age&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<p>v-else要与v-if连用，且v-else是没有条件的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-if=&quot;obj.state&quot;&gt; &#123;&#123;obj.age&#125;&#125;&lt;/view&gt;</span><br><span class=\"line\">&lt;view v-else&gt; &#123;&#123;obj.name&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<p>且v-if和v-else要挨在一起（加空格或者回车是可以的，加v-else-if也是可以的，加其他的就会报错）</p>\n<p>注意这里的obj.state，取值是true &#x2F;false，是boolean值，而不是“true”&#x2F;“false”（这是字符串，不是boolean）</p>\n<h4 id=\"v-show\"><a href=\"#v-show\" class=\"headerlink\" title=\"v-show\"></a>v-show</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-show=&quot;obj.state&quot;&gt;&#123;&#123;obj.name&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"v-if和v-show的区别\"><a href=\"#v-if和v-show的区别\" class=\"headerlink\" title=\"v-if和v-show的区别\"></a>v-if和v-show的区别</h4><p>v-if取值为false，则标签在页面上不存在，v-show取值为false，标签在页面上存在，但是display为none，是由css控制的，性能更好些。</p>\n<p>当v-if取值从false改为true，相当于对DOM体重新进行了一次渲染，所以性能低。</p>\n<p>不过差异也不是很大，所以都可以使用，但是注意区别。v-show不显示，但是DOM体存在。</p>\n<h2 id=\"列表渲染-v-for\"><a href=\"#列表渲染-v-for\" class=\"headerlink\" title=\"列表渲染 v-for\"></a>列表渲染 v-for</h2><p>对数组或对象进行渲染</p>\n<h4 id=\"对数组进行渲染\"><a href=\"#对数组进行渲染\" class=\"headerlink\" title=\"对数组进行渲染\"></a>对数组进行渲染</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-for=&quot;(item, index) in arr&quot;&gt;</span><br><span class=\"line\">\t&#123;&#123;arr[index]&#125;&#125;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<p>arr是个数组，定义为arr: [‘123’,’str’,’456’,’桃七’]。</p>\n<p>v-for里只写一个参数，则是item，即数组里的每一项。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-for=&quot;item in arr&quot;&gt;</span><br><span class=\"line\">\t&#123;&#123; item &#125;&#125;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"对对象进行渲染\"><a href=\"#对对象进行渲染\" class=\"headerlink\" title=\"对对象进行渲染\"></a>对对象进行渲染</h4><p>v-for还可以循环打印对象，但是用的不多。<br>ndex是索引，name是对象的属性名，value是对象的属性值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-for=&quot;(value, name, index) in arr&quot;&gt;</span><br><span class=\"line\">\t&#123;&#123; index &#125;&#125; - &#123;&#123; name &#125;&#125; - &#123;&#123; value &#125;&#125;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"key\"><a href=\"#key\" class=\"headerlink\" title=\"key\"></a>key</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;view v-for=&quot;(item, index) in arr&quot; :key=&quot;index&quot;&gt;</span><br><span class=\"line\">\t&#123;&#123;index&#125;&#125;</span><br><span class=\"line\">&lt;/view&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"vue指令\"><a href=\"#vue指令\" class=\"headerlink\" title=\"vue指令\"></a>vue指令</h2><h4 id=\"v-once\"><a href=\"#v-once\" class=\"headerlink\" title=\"v-once\"></a>v-once</h4><p>H5和微信小程序均不支持。<br>v-once只渲染一次。</p>\n<h4 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h4><p>动态绑定标签的属性。</p>\n<p>场景：图片的路径src可能需要动态获取。</p>\n<p>例如：通过添加v-bind，使得src可以读取data中的img变量内容。<br><img src=\"https://i-blog.csdnimg.cn/direct/a69dcc0e975a43c2a0258524bc052fde.png\" alt=\"在这里插入图片描述\"><br>动态显示3张不同的图，图片路径相同，图片title分别为png1、png2和png3。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;image :src=&quot;&#x27;../../static/images/png&#x27;+item+&#x27;.png&#x27;&quot; mode=&quot;&quot; v-for=&quot;item in 3&quot;&gt;</span><br><span class=\"line\">&lt;/image&gt;</span><br></pre></td></tr></table></figure>\n<p>我们想要实现双向绑定，只靠v-bind是无法完成的：<br>但是我们可以通过添加@input事件实时修改iptvalue中的值实现双向绑定：<br><img src=\"https://i-blog.csdnimg.cn/direct/ef5aa06a7fc34a0b974b5b91868d1f26.png\" alt=\"在这里插入图片描述\"><br>可以直接使用v-model去实现双向绑定：<br><img src=\"https://i-blog.csdnimg.cn/direct/8f2ef66006a246339d1e2ee1a31cf6a8.png\" alt=\"在这里插入图片描述\"></p>\n<p>注意：v-model不能简写！！！</p>\n<h4 id=\"v-on-事件\"><a href=\"#v-on-事件\" class=\"headerlink\" title=\"v-on 事件\"></a>v-on 事件</h4><ul>\n<li>原始写法：div里写个onClick</li>\n<li>写法:<br>①v-on指令，绑定了click事件（还有其他事件）。</li>\n</ul>\n<p>②发生click事件时，执行onClick方法。</p>\n<p>③onClick方法的定义。注意对data中的数据处理时前面要加this，因为是vue实例对象的属性。</p>\n<ul>\n<li>指令简写：v-on简写为@<br>事件处理函数的简写，: 和 function去掉</li>\n</ul>\n<h2 id=\"计算属性computed\"><a href=\"#计算属性computed\" class=\"headerlink\" title=\"计算属性computed\"></a>计算属性computed</h2><p><img src=\"https://i-blog.csdnimg.cn/direct/66fc64c3c3dd46afaa3b8f38a4b127b1.png\" alt=\"在这里插入图片描述\"><br>我们也可以使用computed属性：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;computed&#125; from &quot;vue&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">let 变量名 = computed(()=&gt;&#123;计算过程&#125;);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i-blog.csdnimg.cn/direct/4ca5f96b0c634a9ea4a7dab3ed946b1b.png\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;checkbox-group name=&quot;&quot; @change=&quot;changeCheckbox&quot;&gt;</span><br><span class=\"line\">\t\t&lt;view v-for=&quot;item in msg&quot; :key=&quot;item.id&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;checkbox :value=&quot;item.id&quot; /&gt;&lt;text&gt;&#123;&#123;item.name&#125;&#125;--&#123;&#123;item.price&#125;&#125;&lt;/text&gt;</span><br><span class=\"line\">\t\t&lt;/view&gt;</span><br><span class=\"line\">\t&lt;/checkbox-group&gt;</span><br><span class=\"line\">\t&lt;view&gt;共选中了&#123;&#123;selected.length&#125;&#125;件商品，总价为&#123;&#123;totalPrice&#125;&#125;&lt;/view&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;script setup&gt;</span><br><span class=\"line\">\timport &#123;</span><br><span class=\"line\">\t\tref,</span><br><span class=\"line\">\t\treactive,</span><br><span class=\"line\">\t\tcomputed</span><br><span class=\"line\">\t&#125; from &quot;vue&quot;;</span><br><span class=\"line\"> </span><br><span class=\"line\">\tlet msg = reactive([&#123;</span><br><span class=\"line\">\t\t\tid: &quot;11&quot;,</span><br><span class=\"line\">\t\t\tname: &quot;小米&quot;,</span><br><span class=\"line\">\t\t\tprice: 2000</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tid: &quot;22&quot;,</span><br><span class=\"line\">\t\t\tname: &quot;华为&quot;,</span><br><span class=\"line\">\t\t\tprice: 4000</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tid: &quot;33&quot;,</span><br><span class=\"line\">\t\t\tname: &quot;苹果&quot;,</span><br><span class=\"line\">\t\t\tprice: 6000</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]);</span><br><span class=\"line\">\tlet selected = ref([]);</span><br><span class=\"line\">\tlet totalPrice = computed(() =&gt; &#123;</span><br><span class=\"line\">\t\tlet price = 0;</span><br><span class=\"line\">\t\tlet selectedPrice = msg.filter((item) =&gt; selected.value.includes(item.id));</span><br><span class=\"line\">\t\tselectedPrice.forEach((item)=&gt;&#123;</span><br><span class=\"line\">\t\t\tprice += item.price;</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\treturn price;</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">\tfunction changeCheckbox(e) &#123;</span><br><span class=\"line\">\t\tselected.value = e.detail.value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">\tinput &#123;</span><br><span class=\"line\">\t\tborder: 1px solid #ccc;</span><br><span class=\"line\">\t\twidth: 80vw;</span><br><span class=\"line\">\t\theight: 40px;</span><br><span class=\"line\">\t\tmargin: auto;</span><br><span class=\"line\">\t\tmargin-top: 10px;</span><br><span class=\"line\">\t\tbackground-color: #fff;</span><br><span class=\"line\">\t\tz-index: 2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"watch和watchEffect监听的使用\"><a href=\"#watch和watchEffect监听的使用\" class=\"headerlink\" title=\"watch和watchEffect监听的使用\"></a>watch和watchEffect监听的使用</h2><p>想要使用watch监听需要引入watch：</p>\n<blockquote>\n<p>import {watch} from “vue”;</p>\n</blockquote>\n<p>监听某一个变量（浅层监听）：</p>\n<blockquote>\n<p>watch(变量名, (newValue, oldValue)&#x3D;&gt;{…})</p>\n</blockquote>\n<p>我们监听变量num，通过输入input去改变num的值：<br><img src=\"https://i-blog.csdnimg.cn/direct/afbd4f155d5a4b40b0891d89ef6e303b.png\" alt=\"在这里插入图片描述\"><br>监听对象中的某一个属性（深度监听）：</p>\n<blockquote>\n<p>watch(()&#x3D;&gt;变量名.value.属性名, (newValue, oldValue)&#x3D;&gt;{…})<br><img src=\"https://i-blog.csdnimg.cn/direct/3ebc8116e4c34358a339cf8b683e9a98.png\" alt=\"在这里插入图片描述\"><br>如果我们想要对该对象的所有属性都进行深度监听，则使用如下写法：</p>\n</blockquote>\n<blockquote>\n<p>watch(变量名, (newValue, oldValue)&#x3D;&gt;{…}, {deep:true})<br>我们使用如下写法以后修改person中的所有属性都会触发watch：<br><img src=\"https://i-blog.csdnimg.cn/direct/60462bd1328f488fbe9017d867a330b7.png\" alt=\"在这里插入图片描述\"><br>注意：开启全属性深度监听会在一定程度上降低代码的性能</p>\n</blockquote>\n<p>程序启动时立即进行一次监听：</p>\n<blockquote>\n<p>watch(变量名, (newValue, oldValue)&#x3D;&gt;{…}, {deep:true, immediate:true}) </p>\n</blockquote>\n<h2 id=\"uniapp中的页面生命周期函数\"><a href=\"#uniapp中的页面生命周期函数\" class=\"headerlink\" title=\"uniapp中的页面生命周期函数\"></a>uniapp中的页面生命周期函数</h2><blockquote>\n<p>uniapp页面生命周期函数与 Vue.js 的生命周期函数有所不同，因为 uni-app 是基于 Vue.js 的跨平台应用框架，因此它具有自己特定的生命周期函数。<br>可以在这些生命周期函数中编写相应的逻辑代码，以便在不同阶段对页面进行初始化、展示、隐藏和卸载时执行特定的操作。</p>\n</blockquote>\n<p>在开发uniapp Vue3版本的时候，不能像vue2的选项式API一样，可以直接使用onLoad、onShow等，在组合式API中需要先从“@dcloudio&#x2F;uni-app”模块中导入才可以。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script setup&gt;</span><br><span class=\"line\">import &#123;onLoad,onReady&#125; from &quot;@dcloudio/uni-app&quot;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>onLoad：页面加载时触发，可以在此生命周期函数中进行页面初始化操作。<br>onShow：页面显示时触发，可以在此生命周期函数中进行页面展示相关的操作。<br>onReady：页面初次渲染完成时触发，可以在此生命周期函数中进行页面渲染完成后的操作。<br>onHide：页面隐藏时触发，可以在此生命周期函数中进行页面隐藏相关的操作。<br>onUnload：页面卸载时触发，可以在此生命周期函数中进行页面卸载相关的操作。<br>其他常用的生命周期，可以看官方发文档，页面生命周期函数</p>\n<h2 id=\"uniapp中组件生命周期函数和页面生命周期函数的执行顺序\"><a href=\"#uniapp中组件生命周期函数和页面生命周期函数的执行顺序\" class=\"headerlink\" title=\"uniapp中组件生命周期函数和页面生命周期函数的执行顺序\"></a>uniapp中组件生命周期函数和页面生命周期函数的执行顺序</h2><p>不包含组件的页面<br>onLoad &gt; onShow &gt; onReady</p>\n<p>包含组件的页面<br>onLoad &gt; onShow &gt; onBeforeMount &gt; onReady &gt; onMounted</p>\n","categories":[],"tags":[]}
{"title":"","slug":"vue3..","date":"2025-01-19T06:46:38.441Z","updated":"2025-01-19T06:43:58.957Z","comments":true,"path":"api/articles/vue3...json","photos":[],"excerpt":null,"covers":null,"content":"<h1 id=\"一-setup\"><a href=\"#一-setup\" class=\"headerlink\" title=\"一.setup\"></a>一.setup</h1><p>setup 函数返回的对象中的内容，可直接在模板中使用。</p>\n<p>setup中访问this是undefined,&#x3D;&gt;<strong>setup中不能用this</strong></p>\n<p>setup函数会在beforeCreate之前调用，它是“领先”所有钩子执行的。&#x3D;&gt;<strong>setup先执行</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;template&gt;   &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">      &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">      &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">      &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">      &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">      &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;   &lt;/div&gt; &lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">  &lt;script lang=&quot;ts&quot;&gt;   export default &#123;</span><br><span class=\"line\">      name:&#x27;Person&#x27;,   /*</span><br><span class=\"line\">       data()&#123;</span><br><span class=\"line\">       return&#123;</span><br><span class=\"line\">        a:100,</span><br><span class=\"line\">        c,this.name,</span><br><span class=\"line\">        d:900,</span><br><span class=\"line\">        age:90</span><br><span class=\"line\">   \t\t &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">       methods&#123;</span><br><span class=\"line\">         b()&#123;</span><br><span class=\"line\">       \t\t console.log(&quot;b&quot;)</span><br><span class=\"line\">    \t &#125;   \t&#125;  */</span><br><span class=\"line\">      </span><br><span class=\"line\">      setup()&#123;</span><br><span class=\"line\">        // 数据，(原来写在data中（注意：此时的name、age、tel数据都不是响应式数据）</span><br><span class=\"line\">        let name = &#x27;张三&#x27;</span><br><span class=\"line\">        let age = 18</span><br><span class=\"line\">        let tel = &#x27;13888888888&#x27;</span><br><span class=\"line\">  </span><br><span class=\"line\">        // 方法，(原来写在methods中</span><br><span class=\"line\">        function changeName()&#123;</span><br><span class=\"line\">          name = &#x27;zhang-san&#x27; //注意：此时这么修改name页面是不变化的</span><br><span class=\"line\">          console.log(name)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        function changeAge()&#123;</span><br><span class=\"line\">          age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class=\"line\">          console.log(age)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        function showTel()&#123;</span><br><span class=\"line\">          alert(tel)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">        // 交出去了（返回一个对象，对象中的内容，模板中可以直接使用</span><br><span class=\"line\">        return &#123;name,age,tel,changeName,changeAge,showTel&#125;</span><br><span class=\"line\">      &#125;   &#125; &lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"setup-的返回值\"><a href=\"#setup-的返回值\" class=\"headerlink\" title=\"setup 的返回值\"></a>setup 的返回值</h2><p>若返回一个对象：则对象中的：属性、方法等，在模板中均可以直接使用**（重点关注）。**<br>若返回一个函数：则可以自定义渲染内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setup()&#123;</span><br><span class=\"line\">  return ()=&gt; &#x27;你好啊！&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"setup-语法糖\"><a href=\"#setup-语法糖\" class=\"headerlink\" title=\"setup 语法糖\"></a>setup 语法糖</h2><p>setup函数有一个语法糖，这个语法糖，可以让我们把setup独立出去，代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name:&#x27;Person&#x27;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 下面的写法是setup语法糖 --&gt;</span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class=\"line\">  console.log(this) //undefined</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 数据（注意：此时的name、age、tel都不是响应式数据）</span><br><span class=\"line\">  let name = &#x27;张三&#x27;</span><br><span class=\"line\">  let age = 18</span><br><span class=\"line\">  let tel = &#x27;13888888888&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changName()&#123;</span><br><span class=\"line\">    name = &#x27;李四&#x27;//注意：此时这么修改name页面是不变化的</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changAge()&#123;</span><br><span class=\"line\">    console.log(age)</span><br><span class=\"line\">    age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function showTel()&#123;</span><br><span class=\"line\">    alert(tel)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"二-reactive-ref\"><a href=\"#二-reactive-ref\" class=\"headerlink\" title=\"二.reactive&amp;&amp;ref\"></a>二.reactive&amp;&amp;ref</h1><h2 id=\"1-ref\"><a href=\"#1-ref\" class=\"headerlink\" title=\"1.ref\"></a>1.ref</h2><p>作用：定义响应式<strong>变量</strong>。<br><strong>语法：let xxx &#x3D; ref(初始值)。</strong><br><strong>返回值</strong>:一个RefImpl的实例对象，简称ref对象或ref，ref对象的value属性是响应式的。<br>注意点：<br>JS中操作数据需要：xxx.value，但模板中不需要.value，直接使用即可。<br>对于let name &#x3D; ref(‘张三’)来说，name不是响应式的，name.value是响应式的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。</span><br><span class=\"line\">  let name = ref(&#x27;张三&#x27;)</span><br><span class=\"line\">  let age = ref(18)</span><br><span class=\"line\">  // tel就是一个普通的字符串，不是响应式的</span><br><span class=\"line\">  let tel = &#x27;13888888888&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    // JS中操作ref对象时候需要.value</span><br><span class=\"line\">    name.value = &#x27;李四&#x27;</span><br><span class=\"line\">    console.log(name.value)</span><br><span class=\"line\"></span><br><span class=\"line\">    // 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。</span><br><span class=\"line\">    // name = ref(&#x27;zhang-san&#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    // JS中操作ref对象时候需要.value</span><br><span class=\"line\">    age.value += 1 </span><br><span class=\"line\">    console.log(age.value)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function showTel()&#123;</span><br><span class=\"line\">    alert(tel)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-reactive\"><a href=\"#2-reactive\" class=\"headerlink\" title=\"2.reactive\"></a>2.reactive</h2><p>【reactive 创建：对象类型的响应式数据】<br>作用：定义一个响应式<strong>对象</strong>（<strong>基本类型不要用它，要用ref，否则报错</strong>）<br>语法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let 响应式对象= reactive(源对象)。</span><br></pre></td></tr></table></figure>\n<p>返回值:一个<strong>Proxy</strong>的实例对象，简称：响应式对象。<br>注意点：reactive定义的响应式数据是**“深层次”**的。(见下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// 数据</span><br><span class=\"line\">let car = reactive(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class=\"line\">let games = reactive([</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/////////////////////////////////////////深层次</span><br><span class=\"line\">let obj = reactive(&#123;</span><br><span class=\"line\">  a:&#123;</span><br><span class=\"line\">    b:&#123;</span><br><span class=\"line\">      c:&#123;</span><br><span class=\"line\">        d:666</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">function changeCarPrice() &#123;</span><br><span class=\"line\">  car.price += 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function changeFirstGame() &#123;</span><br><span class=\"line\">  games[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function test()&#123;</span><br><span class=\"line\">  obj.a.b.c.d = 999</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-【ref-创建：对象类型的响应式数据】\"><a href=\"#3-【ref-创建：对象类型的响应式数据】\" class=\"headerlink\" title=\"3.【ref 创建：对象类型的响应式数据】\"></a>3.【ref 创建：对象类型的响应式数据】</h2><ul>\n<li>其实ref接收的数据可以是：基本类型、对象类型。</li>\n<li>若ref接收的是对象类型，内部其实也是调用了reactive函数。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// 数据</span><br><span class=\"line\">let car = ref(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class=\"line\">let games = ref([</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class=\"line\">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class=\"line\">])</span><br><span class=\"line\">let obj = ref(&#123;</span><br><span class=\"line\">  a:&#123;</span><br><span class=\"line\">    b:&#123;</span><br><span class=\"line\">      c:&#123;</span><br><span class=\"line\">        d:666</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(car)</span><br><span class=\"line\"></span><br><span class=\"line\">function changeCarPrice() &#123;</span><br><span class=\"line\">  car.value.price += 10</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function changeFirstGame() &#123;</span><br><span class=\"line\">  games.value[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function test()&#123;</span><br><span class=\"line\">  obj.value.a.b.c.d = 999</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-【ref-对比-reactive】\"><a href=\"#4-【ref-对比-reactive】\" class=\"headerlink\" title=\"4.【ref 对比 reactive】\"></a>4.【ref 对比 reactive】</h2><p>ref用来定义：基本类型数据、对象类型数据；</p>\n<p>reactive用来定义：对象类型数据。</p>\n<ul>\n<li>使用原则<br>1.若需要一个基本类型的响应式数据，必须使用ref。<br>2.若需要一个响应式对象，层级不深，ref、reactive都可以。<br>3.若需要一个响应式对象，且层级较深，推荐使用reactive。</li>\n</ul>\n<h1 id=\"三-watch\"><a href=\"#三-watch\" class=\"headerlink\" title=\"三.watch\"></a>三.watch</h1><p>作用：监视数据的变化<br>特点：Vue3中的watch只能监视以下四种数据：</p>\n<p>1.ref定义的数据。<br>2.reactive定义的数据。<br>3.函数返回一个值（getter函数）。<br>4.一个包含上述内容的数组。</p>\n<ul>\n<li>情况一<br>监视ref定义的【基本类型】数据：直接写变量名即可（监视的是其value值的改变），<strong>不用写变量名.value</strong>。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况一：监视【ref】定义的【基本类型】数据</span><br><span class=\"line\">    &lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let sum = ref(0)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeSum()&#123;</span><br><span class=\"line\">    sum.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 监视，情况一：监视【ref】定义的【基本类型】数据</span><br><span class=\"line\">  //watch(谁，回调函数）///////////////////////////////////////////////////////////</span><br><span class=\"line\">  const stopWatch = watch( sum, (newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;sum变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">    if(newValue &gt;= 10)&#123;</span><br><span class=\"line\">      stopWatch()//停止监视</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>情况二<br>监视ref定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。</li>\n</ul>\n<blockquote>\n<ul>\n<li>注意：</li>\n<li>若修改的是ref定义的对象中的<strong>属性</strong>，newValue 和 oldValue <strong>都是新值</strong>，因为它们是同一个对象。</li>\n<li>若修改整个ref定义的<strong>对象</strong>，newValue 是<strong>新值</strong>， oldValue 是<strong>旧值</strong>，因为不是同一个对象了。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况二：监视【ref】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = ref(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.value.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.value.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changePerson()&#123;</span><br><span class=\"line\">    person.value = &#123;name:&#x27;李四&#x27;,age:90&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  /* </span><br><span class=\"line\">    监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视</span><br><span class=\"line\">    watch的第一个参数是：被监视的数据</span><br><span class=\"line\">    watch的第二个参数是：监视的回调</span><br><span class=\"line\">    watch的第三个参数是：配置对象（deep、immediate等等.....） </span><br><span class=\"line\">  */</span><br><span class=\"line\">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;,&#123;deep:true&#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>情况三<br>监视reactive定义的【对象类型】数据，且默认开启了深度监视。<strong>直接写数据名即可</strong></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况三：监视【reactive】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;test&quot;&gt;修改obj.a.b.c&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;//////////////////////</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  let obj = reactive(&#123;</span><br><span class=\"line\">    a:&#123;</span><br><span class=\"line\">      b:&#123;</span><br><span class=\"line\">        c:666</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changePerson()&#123;</span><br><span class=\"line\">  \t//只是值的覆盖，对象没变</span><br><span class=\"line\">    Object.assign(person,&#123;name:&#x27;李四&#x27;,age:80&#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function test()&#123;</span><br><span class=\"line\">    obj.a.b.c = 888</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的</span><br><span class=\"line\">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  watch(obj,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;Obj变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>情况四<br>监视ref或reactive定义的【对象类型】数据中的<strong>某个属性</strong>，注意点如下：</li>\n</ul>\n<p>1.若该属性值不是【对象类型】，需要写成函数形式。<br>2.若该属性值是依然是【对象类型】，可直接编，也可写成函数，建议写成函数。</p>\n<p>结论：监视的要是对象里的属性，那么最好写函数式，注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">    car:&#123;</span><br><span class=\"line\">      c1:&#x27;奔驰&#x27;,</span><br><span class=\"line\">      c2:&#x27;宝马&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC1()&#123;</span><br><span class=\"line\">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC2()&#123;</span><br><span class=\"line\">    person.car.c2 = &#x27;大众&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeCar()&#123;</span><br><span class=\"line\">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是基本类型的，要写成函数式</span><br><span class=\"line\">  /* watch(()=&gt; person.name,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person.name变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;) */</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是对象类型的，可以直接写，也能写函数，更推荐写函数</span><br><span class=\"line\">  watch(()=&gt;person.car,(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;,&#123;deep:true&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>情况五<br>监视上述的多个数据</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;情况五：监视上述的多个数据&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let person = reactive(&#123;</span><br><span class=\"line\">    name:&#x27;张三&#x27;,</span><br><span class=\"line\">    age:18,</span><br><span class=\"line\">    car:&#123;</span><br><span class=\"line\">      c1:&#x27;奔驰&#x27;,</span><br><span class=\"line\">      c2:&#x27;宝马&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeName()&#123;</span><br><span class=\"line\">    person.name += &#x27;~&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeAge()&#123;</span><br><span class=\"line\">    person.age += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC1()&#123;</span><br><span class=\"line\">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeC2()&#123;</span><br><span class=\"line\">    person.car.c2 = &#x27;大众&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeCar()&#123;</span><br><span class=\"line\">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 监视，情况五：监视上述的多个数据</span><br><span class=\"line\">  watch([()=&gt;person.name,person.car],(newValue,oldValue)=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class=\"line\">  &#125;,&#123;deep:true&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>【watchEffect】<br>官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。</p>\n<p>watch对比watchEffect</p>\n<ul>\n<li>都能监听响应式数据的变化，不同的是监听数据变化的方式不同</li>\n</ul>\n<p>1.watch：要明确指出监视的数据</p>\n<p>2.watchEffect：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。</p>\n<ul>\n<li>示例代码：</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h1&gt;需求：水温达到50℃，或水位达到20cm，则联系服务器&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h2 id=&quot;demo&quot;&gt;水温：&#123;&#123;temp&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;h2&gt;水位：&#123;&#123;height&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changePrice&quot;&gt;水温+1&lt;/button&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeSum&quot;&gt;水位+10&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123;ref,watch,watchEffect&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let temp = ref(0)</span><br><span class=\"line\">  let height = ref(0)</span><br><span class=\"line\"></span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changePrice()&#123;</span><br><span class=\"line\">    temp.value += 10</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeSum()&#123;</span><br><span class=\"line\">    height.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 用watch实现，需要明确的指出要监视：temp、height</span><br><span class=\"line\">  watch([temp,height],(value)=&gt;&#123;</span><br><span class=\"line\">    // 从value中获取最新的temp值、height值</span><br><span class=\"line\">    const [newTemp,newHeight] = value</span><br><span class=\"line\">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class=\"line\">    if(newTemp &gt;= 50 || newHeight &gt;= 20)&#123;</span><br><span class=\"line\">      console.log(&#x27;联系服务器&#x27;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  // 用watchEffect实现，不用</span><br><span class=\"line\">  const stopWtach = watchEffect(()=&gt;&#123;</span><br><span class=\"line\">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class=\"line\">    if(temp.value &gt;= 50 || height.value &gt;= 20)&#123;</span><br><span class=\"line\">      console.log(document.getElementById(&#x27;demo&#x27;)?.innerText)</span><br><span class=\"line\">      console.log(&#x27;联系服务器&#x27;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 水温达到100，或水位达到50，取消监视</span><br><span class=\"line\">    if(temp.value === 100 || height.value === 50)&#123;</span><br><span class=\"line\">      console.log(&#x27;清理了&#x27;)</span><br><span class=\"line\">      stopWtach()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"四-【props】\"><a href=\"#四-【props】\" class=\"headerlink\" title=\"四.【props】\"></a>四.【props】</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 定义一个接口，限制每个Person对象的格式</span><br><span class=\"line\">export interface PersonInter &#123;</span><br><span class=\"line\"> id:string,</span><br><span class=\"line\"> name:string,</span><br><span class=\"line\">    age:number</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">// 定义一个自定义类型Persons</span><br><span class=\"line\">export type Persons = Array&lt;PersonInter&gt;</span><br></pre></td></tr></table></figure>\n<p>App.vue中代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;Person :list=&quot;persons&quot;/&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class=\"line\">  import Person from &#x27;./components/Person.vue&#x27;</span><br><span class=\"line\">  import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">    import &#123;type Persons&#125; from &#x27;./types&#x27;</span><br><span class=\"line\">  </span><br><span class=\"line\">    let persons = reactive&lt;Persons&gt;([</span><br><span class=\"line\">     &#123;id:&#x27;e98219e12&#x27;,name:&#x27;张三&#x27;,age:18&#125;,</span><br><span class=\"line\">      &#123;id:&#x27;e98219e13&#x27;,name:&#x27;李四&#x27;,age:19&#125;,</span><br><span class=\"line\">       &#123;id:&#x27;e98219e14&#x27;,name:&#x27;王五&#x27;,age:20&#125;</span><br><span class=\"line\">     ])</span><br><span class=\"line\">   &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>  Person.vue中代码：<br>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &lt;template&gt;</span><br><span class=\"line\">&lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\"> &lt;ul&gt;</span><br><span class=\"line\">     &lt;li v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class=\"line\">        &#123;&#123;item.name&#125;&#125;--&#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">   &lt;/div&gt;</span><br><span class=\"line\">   &lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">import &#123;defineProps&#125; from &#x27;vue&#x27;</span><br><span class=\"line\">import &#123;type PersonInter&#125; from &#x27;@/types&#x27;</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 第一种写法：仅接收</span><br><span class=\"line\">// const props = defineProps([&#x27;list&#x27;])</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 第二种写法：接收+限制类型</span><br><span class=\"line\">// defineProps&lt;&#123;list:Persons&#125;&gt;()</span><br><span class=\"line\">  </span><br><span class=\"line\">  // 第三种写法：接收+限制类型+指定默认值+限制必要性</span><br><span class=\"line\">let props = withDefaults(defineProps&lt;&#123;list?:Persons&#125;&gt;(),&#123;</span><br><span class=\"line\">     list:()=&gt;[&#123;id:&#x27;asdasg01&#x27;,name:&#x27;小猪佩奇&#x27;,age:18&#125;]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">   console.log(props)</span><br><span class=\"line\">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"五-生命周期\"><a href=\"#五-生命周期\" class=\"headerlink\" title=\"五.生命周期\"></a>五.生命周期</h1><p>概念：Vue组件实例在创建时要经历一系列的初始化步骤，在此过程中Vue会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子</p>\n<p>规律：</p>\n<ul>\n<li>生命周期整体分为四个阶段，分别是：创建、挂载、更新、销毁，每个阶段都有两个钩子，一前一后。</li>\n</ul>\n<p>Vue3的生命周期</p>\n<p>创建阶段：setup</p>\n<p>挂载阶段：onBeforeMount、onMounted</p>\n<p>更新阶段：onBeforeUpdate、onUpdated</p>\n<p>卸载阶段：onBeforeUnmount、onUnmounted</p>\n<ul>\n<li><p>常用的钩子：onMounted(挂载完毕)、onUpdated(更新完毕)、onBeforeUnmount(卸载之前)</p>\n</li>\n<li><p>示例代码：</p>\n</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;person&quot;&gt;</span><br><span class=\"line\">    &lt;h2&gt;当前求和为：&#123;&#123; sum &#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- vue3写法 --&gt;</span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class=\"line\">  import &#123; </span><br><span class=\"line\">    ref, </span><br><span class=\"line\">    onBeforeMount, </span><br><span class=\"line\">    onMounted, </span><br><span class=\"line\">    onBeforeUpdate, </span><br><span class=\"line\">    onUpdated, </span><br><span class=\"line\">    onBeforeUnmount, </span><br><span class=\"line\">    onUnmounted </span><br><span class=\"line\">  &#125; from &#x27;vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  // 数据</span><br><span class=\"line\">  let sum = ref(0)</span><br><span class=\"line\">  // 方法</span><br><span class=\"line\">  function changeSum() &#123;</span><br><span class=\"line\">    sum.value += 1</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  console.log(&#x27;setup&#x27;)</span><br><span class=\"line\">  // 生命周期钩子</span><br><span class=\"line\">  onBeforeMount(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;挂载之前&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onMounted(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;挂载完毕&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onBeforeUpdate(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;更新之前&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onUpdated(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;更新完毕&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onBeforeUnmount(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;卸载之前&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  onUnmounted(()=&gt;&#123;</span><br><span class=\"line\">    console.log(&#x27;卸载完毕&#x27;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"六-路由\"><a href=\"#六-路由\" class=\"headerlink\" title=\"六.路由\"></a>六.路由</h1><h2 id=\"6-1对路由的理解\"><a href=\"#6-1对路由的理解\" class=\"headerlink\" title=\"6.1对路由的理解\"></a>6.1对路由的理解</h2><h2 id=\"6-2基本切换小果\"><a href=\"#6-2基本切换小果\" class=\"headerlink\" title=\"6.2基本切换小果\"></a>6.2基本切换小果</h2><p>路由配置文件代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;createRouter,createWebHistory&#125; from &#x27;vue-router&#x27;</span><br><span class=\"line\">import Home from &#x27;@/pages/Home.vue&#x27;</span><br><span class=\"line\">import News from &#x27;@/pages/News.vue&#x27;</span><br><span class=\"line\">import About from &#x27;@/pages/About.vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">const router = createRouter(&#123;</span><br><span class=\"line\">\thistory:createWebHistory(),</span><br><span class=\"line\">\troutes:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tpath:&#x27;/home&#x27;,</span><br><span class=\"line\">\t\t\tcomponent:Home</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tpath:&#x27;/about&#x27;,</span><br><span class=\"line\">\t\t\tcomponent:About</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">export default router</span><br></pre></td></tr></table></figure>\n<p>main.ts代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import router from &#x27;./router/index&#x27;</span><br><span class=\"line\">app.use(router)</span><br><span class=\"line\"></span><br><span class=\"line\">app.mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure>\n<p>App.vue代码如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;app&quot;&gt;</span><br><span class=\"line\">    &lt;h2 class=&quot;title&quot;&gt;Vue路由测试&lt;/h2&gt;</span><br><span class=\"line\">    &lt;!-- 导航区 --&gt;</span><br><span class=\"line\">    &lt;div class=&quot;navigate&quot;&gt;</span><br><span class=\"line\">      &lt;RouterLink to=&quot;/home&quot; active-class=&quot;active&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class=\"line\">      &lt;RouterLink to=&quot;/news&quot; active-class=&quot;active&quot;&gt;新闻&lt;/RouterLink&gt;</span><br><span class=\"line\">      &lt;RouterLink to=&quot;/about&quot; active-class=&quot;active&quot;&gt;关于&lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;!-- 展示区 --&gt;</span><br><span class=\"line\">    &lt;div class=&quot;main-content&quot;&gt;</span><br><span class=\"line\">      &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class=\"line\">  import &#123;RouterLink,RouterView&#125; from &#x27;vue-router&#x27;  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-3两个注意\"><a href=\"#6-3两个注意\" class=\"headerlink\" title=\"6.3两个注意\"></a>6.3两个注意</h2><p>1.路由组件通常存放在pages 或 views文件夹，一般组件通常存放在components文件夹。</p>\n<p>2.通过点击导航，视觉效果上“消失” 了的路由组件，默认是被卸载掉的，需要的时候再去挂载。</p>\n<h2 id=\"6-4路由器工作模式\"><a href=\"#6-4路由器工作模式\" class=\"headerlink\" title=\"6.4路由器工作模式\"></a>6.4路由器工作模式</h2><p>1.history模式</p>\n<blockquote>\n<p>优点：URL更加美观，不带有#，更接近传统的网站URL。<br>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有404错误。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const router = createRouter(&#123;</span><br><span class=\"line\">  \thistory:createWebHistory(), //history模式</span><br><span class=\"line\">  \t/******/</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>2.hash模式</p>\n<blockquote>\n<p>优点：兼容性更好，因为不需要服务器端处理路径。<br>缺点：URL带有#不太美观，且在SEO优化方面相对较差。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const router = createRouter(&#123;</span><br><span class=\"line\">  \thistory:createWebHashHistory(), //hash模式</span><br><span class=\"line\">  \t/******/</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-5-tode两种写法\"><a href=\"#6-5-tode两种写法\" class=\"headerlink\" title=\"6.5 tode两种写法\"></a>6.5 tode两种写法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 第一种：to的字符串写法 --&gt;</span><br><span class=\"line\">&lt;router-link active-class=&quot;active&quot; to=&quot;/home&quot;&gt;主页&lt;/router-link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 第二种：to的对象写法 --&gt;</span><br><span class=\"line\">&lt;router-link active-class=&quot;active&quot; :to=&quot;&#123;path:&#x27;/home&#x27;&#125;&quot;&gt;Home&lt;/router-link&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"命名路由\"><a href=\"#命名路由\" class=\"headerlink\" title=\"命名路由\"></a>命名路由</h2><p>作用：可以简化路由跳转及传参（后面就讲）。</p>\n<p>给路由规则命名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routes:[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name:&#x27;zhuye&#x27;,</span><br><span class=\"line\">    path:&#x27;/home&#x27;,</span><br><span class=\"line\">    component:Home</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name:&#x27;xinwen&#x27;,</span><br><span class=\"line\">    path:&#x27;/news&#x27;,</span><br><span class=\"line\">    component:News,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name:&#x27;guanyu&#x27;,</span><br><span class=\"line\">    path:&#x27;/about&#x27;,</span><br><span class=\"line\">    component:About</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"跳转路由\"><a href=\"#跳转路由\" class=\"headerlink\" title=\"跳转路由\"></a>跳转路由</h2><p>1.编写News的子路由：Detail.vue<br>2.配置路由规则，使用children配置项：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const router = createRouter(&#123;</span><br><span class=\"line\">  history:createWebHistory(),</span><br><span class=\"line\">\troutes:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tname:&#x27;zhuye&#x27;,</span><br><span class=\"line\">\t\t\tpath:&#x27;/home&#x27;,</span><br><span class=\"line\">\t\t\tcomponent:Home</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tname:&#x27;xinwen&#x27;,</span><br><span class=\"line\">\t\t\tpath:&#x27;/news&#x27;,</span><br><span class=\"line\">\t\t\tcomponent:News,</span><br><span class=\"line\">\t\t\tchildren:[</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tname:&#x27;xiang&#x27;,</span><br><span class=\"line\">\t\t\t\t\tpath:&#x27;detail&#x27;,</span><br><span class=\"line\">\t\t\t\t\tcomponent:Detail</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tname:&#x27;guanyu&#x27;,</span><br><span class=\"line\">\t\t\tpath:&#x27;/about&#x27;,</span><br><span class=\"line\">\t\t\tcomponent:About</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">export default router</span><br></pre></td></tr></table></figure>\n<p>记得去Home组件中预留一个<router-view></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;news&quot;&gt;</span><br><span class=\"line\">    &lt;nav class=&quot;news-list&quot;&gt;</span><br><span class=\"line\">      &lt;RouterLink v-for=&quot;news in newsList&quot; :key=&quot;news.id&quot; :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;</span><br><span class=\"line\">        &#123;&#123;news.name&#125;&#125;</span><br><span class=\"line\">      &lt;/RouterLink&gt;</span><br><span class=\"line\">    &lt;/nav&gt;</span><br><span class=\"line\">    &lt;div class=&quot;news-detail&quot;&gt;</span><br><span class=\"line\">      &lt;RouterView/&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由传参\"><a href=\"#路由传参\" class=\"headerlink\" title=\"路由传参\"></a>路由传参</h2><h3 id=\"query参数\"><a href=\"#query参数\" class=\"headerlink\" title=\"query参数\"></a>query参数</h3><p>传递参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 跳转并携带query参数（to的字符串写法） --&gt;</span><br><span class=\"line\">&lt;router-link to=&quot;/news/detail?a=1&amp;b=2&amp;content=欢迎你&quot;&gt;</span><br><span class=\"line\">\t跳转</span><br><span class=\"line\">&lt;/router-link&gt;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">&lt;!-- 跳转并携带query参数（to的对象写法） --&gt;</span><br><span class=\"line\">&lt;RouterLink </span><br><span class=\"line\">  :to=&quot;&#123;</span><br><span class=\"line\">    //name:&#x27;xiang&#x27;, //用name也可以跳转</span><br><span class=\"line\">    path:&#x27;/news/detail&#x27;,</span><br><span class=\"line\">    query:&#123;</span><br><span class=\"line\">      id:news.id,</span><br><span class=\"line\">      title:news.title,</span><br><span class=\"line\">      content:news.content</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &#123;&#123;news.title&#125;&#125;</span><br><span class=\"line\">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure>\n<p>接收参数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;useRoute&#125; from &#x27;vue-router&#x27;</span><br><span class=\"line\">const route = useRoute()</span><br><span class=\"line\">// 打印query参数</span><br><span class=\"line\">console.log(route.query)</span><br></pre></td></tr></table></figure>\n<h3 id=\"params参数\"><a href=\"#params参数\" class=\"headerlink\" title=\"params参数\"></a>params参数</h3><p>传递参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 跳转并携带params参数（to的字符串写法） --&gt;</span><br><span class=\"line\">&lt;RouterLink :to=&quot;`/news/detail/001/新闻001/内容001`&quot;&gt;&#123;&#123;news.title&#125;&#125;&lt;/RouterLink&gt;</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">&lt;!-- 跳转并携带params参数（to的对象写法） --&gt;</span><br><span class=\"line\">&lt;RouterLink </span><br><span class=\"line\">  :to=&quot;&#123;</span><br><span class=\"line\">    name:&#x27;xiang&#x27;, //用name跳转</span><br><span class=\"line\">    params:&#123;</span><br><span class=\"line\">      id:news.id,</span><br><span class=\"line\">      title:news.title,</span><br><span class=\"line\">      content:news.title</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &#123;&#123;news.title&#125;&#125;</span><br><span class=\"line\">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure>\n<p>接收参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;useRoute&#125; from &#x27;vue-router&#x27;</span><br><span class=\"line\">const route = useRoute()</span><br><span class=\"line\">// 打印params参数</span><br><span class=\"line\">console.log(route.params)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>1：传递params参数时，若使用to的对象写法，必须使用name配置项，不能用path。<br>2：传递params参数时，需要提前在规则中占位。</p>\n</blockquote>\n<h2 id=\"replace属性\"><a href=\"#replace属性\" class=\"headerlink\" title=\"replace属性\"></a>replace属性</h2><ul>\n<li><p>作用：控制路由跳转时操作浏览器历史记录的模式。</p>\n</li>\n<li><p>浏览器的历史记录有两种写入方式：分别为push和replace：</p>\n<blockquote>\n<p>push是追加历史记录（默认值）。<br>replace是替换当前记录。</p>\n</blockquote>\n</li>\n<li><p>开启replace模式：</p>\n</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;RouterLink replace .......&gt;News&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123;useRoute,useRouter&#125; from &#x27;vue-router&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">const route = useRoute()</span><br><span class=\"line\">const router = useRouter()</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(route.query)</span><br><span class=\"line\">console.log(route.parmas)</span><br><span class=\"line\">console.log(router.push)</span><br><span class=\"line\">console.log(router.replace)</span><br></pre></td></tr></table></figure>\n<p>重定向<br>作用：将特定的路径，重新定向到已有路由。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    path:&#x27;/&#x27;,</span><br><span class=\"line\">    redirect:&#x27;/about&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"七-pinia\"><a href=\"#七-pinia\" class=\"headerlink\" title=\"七.pinia\"></a>七.pinia</h1><h2 id=\"7-1准备一个效果\"><a href=\"#7-1准备一个效果\" class=\"headerlink\" title=\"7.1准备一个效果\"></a>7.1准备一个效果</h2><h2 id=\"7-2搭建-pinia-环境\"><a href=\"#7-2搭建-pinia-环境\" class=\"headerlink\" title=\"7.2搭建 pinia 环境\"></a>7.2搭建 pinia 环境</h2><p>第一步：npm install pinia</p>\n<p>第二步：操作src&#x2F;main.ts</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; createApp &#125; from &#x27;vue&#x27;</span><br><span class=\"line\">import App from &#x27;./App.vue&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 引入createPinia，用于创建pinia */</span><br><span class=\"line\">import &#123; createPinia &#125; from &#x27;pinia&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 创建pinia */</span><br><span class=\"line\">const pinia = createPinia()</span><br><span class=\"line\">const app = createApp(App)</span><br><span class=\"line\"></span><br><span class=\"line\">/* 使用插件 */&#123;&#125;</span><br><span class=\"line\">app.use(pinia)</span><br><span class=\"line\">app.mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-3-存储-读取数据\"><a href=\"#7-3-存储-读取数据\" class=\"headerlink\" title=\"7.3 存储+读取数据\"></a>7.3 存储+读取数据</h2><p>Store是一个保存：状态、业务逻辑 的实体，每个组件都可以读取、写入它。</p>\n<p>它有三个概念：state、getter、action，相当于组件中的： data、 computed 和 methods。</p>\n<p>具体编码：src&#x2F;store&#x2F;count.ts</p>\n<h2 id=\"7-4修改数据\"><a href=\"#7-4修改数据\" class=\"headerlink\" title=\"7.4修改数据\"></a>7.4修改数据</h2><p>1.直接修改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">countStore.sum = 666</span><br></pre></td></tr></table></figure>\n<p>2.批量修改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">countStore.$patch(&#123;</span><br><span class=\"line\">  sum:999,</span><br><span class=\"line\">  school:&#x27;atguigu&#x27;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>3.借助action修改（action中可以编写一些业务逻辑）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; defineStore &#125; from &#x27;pinia&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">export const useCountStore = defineStore(&#x27;count&#x27;, &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  actions: &#123;</span><br><span class=\"line\">    //加</span><br><span class=\"line\">    increment(value:number) &#123;</span><br><span class=\"line\">      if (this.sum &lt; 10) &#123;</span><br><span class=\"line\">        //操作countStore中的sum</span><br><span class=\"line\">        this.sum += value</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    //减</span><br><span class=\"line\">    decrement(value:number)&#123;</span><br><span class=\"line\">      if(this.sum &gt; 1)&#123;</span><br><span class=\"line\">        this.sum -= value</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>4.组件中调用action</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 使用countStore</span><br><span class=\"line\">const countStore = useCountStore()</span><br><span class=\"line\"></span><br><span class=\"line\">// 调用对应action</span><br><span class=\"line\">countStore.incrementOdd(n.value)</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-storeToRefs\"><a href=\"#5-storeToRefs\" class=\"headerlink\" title=\"5.storeToRefs\"></a>5.storeToRefs</h2><ul>\n<li>借助storeToRefs将store中的数据转为ref对象，方便在模板中使用。</li>\n<li>注意：pinia提供的storeToRefs只会将数据做转换，而Vue的toRefs会转换store中数据。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;count&quot;&gt;</span><br><span class=\"line\">\t\t&lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class=\"line\">  import &#123; useCountStore &#125; from &#x27;@/store/count&#x27;</span><br><span class=\"line\">  /* 引入storeToRefs */</span><br><span class=\"line\">  import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/* 得到countStore */</span><br><span class=\"line\">  const countStore = useCountStore()</span><br><span class=\"line\">  /* 使用storeToRefs转换countStore，随后解构 */</span><br><span class=\"line\">  const &#123;sum&#125; = storeToRefs(countStore)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-getters\"><a href=\"#6-getters\" class=\"headerlink\" title=\"6.getters\"></a>6.getters</h2><p>概念：当state中的数据，需要经过处理后再使用时，可以使用getters配置。</p>\n<p>追加getters配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 引入defineStore用于创建store</span><br><span class=\"line\">import &#123;defineStore&#125; from &#x27;pinia&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// 定义并暴露一个store</span><br><span class=\"line\">export const useCountStore = defineStore(&#x27;count&#x27;,&#123;</span><br><span class=\"line\">  // 动作</span><br><span class=\"line\">  actions:&#123;</span><br><span class=\"line\">    /************/</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  // 状态</span><br><span class=\"line\">  state()&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      sum:1,</span><br><span class=\"line\">      school:&#x27;atguigu&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  // 计算</span><br><span class=\"line\">  getters:&#123;</span><br><span class=\"line\">    bigSum:(state):number =&gt; state.sum *10,</span><br><span class=\"line\">    upperSchool():string&#123;</span><br><span class=\"line\">      return this. school.toUpperCase()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>组件中读取数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const &#123;increment,decrement&#125; = countStore</span><br><span class=\"line\">let &#123;sum,school,bigSum,upperSchool&#125; = storeToRefs(countStore)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n","categories":[],"tags":[]}
{"title":"apifox","slug":"apifox","date":"2025-02-01T12:31:10.575Z","updated":"2025-02-01T12:29:35.713Z","comments":true,"path":"api/articles/apifox.json","photos":[],"excerpt":null,"covers":["https://i-blog.csdnimg.cn/direct/788fa989b0b5488896526778c1a8975f.png","https://i-blog.csdnimg.cn/direct/1c485cd6b6e34d3e9cabdd58783ce9b4.png","https://i-blog.csdnimg.cn/direct/47ccacfae89d4c23b7e99377b959bc8d.png","https://i-blog.csdnimg.cn/direct/ae7b0be0c64148b4b611ba32d9691fc8.png","https://i-blog.csdnimg.cn/direct/5ef97db7f5f2405ca1e12c734bca97da.png"],"content":"<h4 id=\"接口测试测什么\"><a href=\"#接口测试测什么\" class=\"headerlink\" title=\"接口测试测什么\"></a>接口测试测什么</h4><p>接口测试主要是测试系统 组件间接口的一种测试，主要用于测试服务器与前端（web浏览器，APP）之间的数据交互接口。测试的重点是要检查接口参数传递的正确性，接口功能实现的正确性，输出结果的正确性，以及对各种异常情况的容错处理的完整性和合理性。</p>\n<p>由引文对接口测试的定义可得，接口测试的对象是服务器接口，接口测试的内容包括：接口参数检验，接口功能实现是否正确，接口异常情况容错处理。</p>\n<p>接口测试的内容是《Apifox接口测试》系列教程后面的内容，本文主要讲解服务器接口，前端如何通过http协议与服务器通信，Apifox等接口测试工具如何实现接口测试。</p>\n<h4 id=\"接口测试的对象：服务器接口\"><a href=\"#接口测试的对象：服务器接口\" class=\"headerlink\" title=\"接口测试的对象：服务器接口\"></a>接口测试的对象：服务器接口</h4><p>API指的是一组预先定义好的函数，来让系统或外部的其他组件可以执行它内部实现的功能，但又无须访问源代码或者理解其内部逻辑。</p>\n<p>在需求开发过程中，前后端分离开发，两端的研发人员会共同定义好接口，编写接口文档，此后的开发过程中需要遵循这份协议文档。</p>\n<p>因此接口测试也是一种黑盒测试，测试人员需要根据接口文档来对服务器Api进行测试，来检测约定的功能是否正确实现，是否有对异常情况做容错处理。</p>\n<p>而接口文档的编写是依据前后端数据传输的协议——Http协议进行的。</p>\n<p>要会用接口文档，首先先理解http协议。</p>\n<h4 id=\"服务器接口与前端通信的方式：http协议\"><a href=\"#服务器接口与前端通信的方式：http协议\" class=\"headerlink\" title=\"服务器接口与前端通信的方式：http协议\"></a>服务器接口与前端通信的方式：http协议</h4><p>服务器和前端通过互相发送http报文完成数据交互。本小节将介绍如何创建http报文，以及如何理解报文的每一个部分，了解完就可以掌握接口测试的基础内容。</p>\n<h4 id=\"Apifox模拟前端请求mock\"><a href=\"#Apifox模拟前端请求mock\" class=\"headerlink\" title=\"Apifox模拟前端请求mock\"></a>Apifox模拟前端请求mock</h4><p>首先打开Apifox，新建一个数据模型。数据模型可以点击使用JSON格式新建，比如下面。<br><img src=\"https://i-blog.csdnimg.cn/direct/788fa989b0b5488896526778c1a8975f.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://i-blog.csdnimg.cn/direct/f9d403248ad8414487973b353d96a06c.png\" alt=\"在这里插入图片描述\"></p>\n<p>去新建一个接口，先把上面接口路径写了。然后到响应定义界面，选一下根节点数据类型，选最上面引用类型，然后选择刚刚定义的mock数据模型。<br><img src=\"https://i-blog.csdnimg.cn/direct/1c485cd6b6e34d3e9cabdd58783ce9b4.png\" alt=\"在这里插入图片描述\"></p>\n<p>接着往下滑，新建一个示例。新建完后点右上角保存这个接口，会弹出来一个框，输下接口名称就行。<br><img src=\"https://i-blog.csdnimg.cn/direct/47ccacfae89d4c23b7e99377b959bc8d.png\" alt=\"在这里插入图片描述\"></p>\n<p>保存后点mock，复制mock地址中快捷请求的路径到上面的请求框，点击发送，可以看到下面请求成功。<br><img src=\"https://i-blog.csdnimg.cn/direct/ae7b0be0c64148b4b611ba32d9691fc8.png\" alt=\"在这里插入图片描述\"></p>\n<p>到此完成模拟请求，可以去浏览器测试一下，复制上面的路径到浏览器，可以看到有成功的请求。<br><img src=\"https://i-blog.csdnimg.cn/direct/5ef97db7f5f2405ca1e12c734bca97da.png\" alt=\"在这里插入图片描述\"><br>以下是关于自主下载Apifox并注册账号后，如何生成mock接口路由和mock数据、如何测试接口、如何加入团队和设置权限的详细步骤：</p>\n<p>一、生成mock接口路由和mock数据<br>下载并安装Apifox<br>访问Apifox官方网站，下载并安装适用于您操作系统的版本。<br>注册并登录账号<br>使用微信扫码登录Apifox（新用户扫码后选择生成新账户）。<br>创建项目和接口<br>在Apifox中，创建一个新的项目。<br>点击项目详情页面中的“新建接口”按钮，输入接口路径和接口名称，并保存。<br>生成mock数据<br>在接口详情页面，切换到“Mock服务”选项卡。<br>点击“新建期望”按钮，输入期望名称和Mock数据的规则（可以使用mock.js的语法描述返回的数据）。<br>保存设置后，Apifox将自动生成mock接口路由和相应的mock数据。<br>二、测试接口<br>配置环境<br>在Apifox中，点击右上角的“环境设置”，配置您的API后端地址。<br>选择接口<br>在接口列表中选择您要测试的接口。<br>编辑请求参数<br>根据接口要求，编辑请求参数（如查询参数、请求体等）。<br>发送请求并查看响应<br>点击“发送”按钮，Apifox将向指定的后端地址发送请求，并显示响应结果。<br>您可以在响应结果中查看状态码、响应时间、响应体等内容。<br>三、加入团队和设置权限<br>加入团队<br>在Apifox中，点击左侧的“团队”选项。<br>点击“加入团队”按钮，输入团队邀请码或链接，即可加入团队。<br>设置成员权限<br>团队层级权限：团队所有者或团队管理者可以进入「我的团队」-&gt;「成员&#x2F;权限」，点击对应成员的「设置」图标，为成员设置团队层级权限。团队层级权限按角色分为团队所有者、团队管理者、团队成员、游客。<br>项目层级权限：在项目详情页面，点击“成员&#x2F;权限”选项卡，可以为团队成员设置项目层级权限。项目层级权限分为管理员、编辑者、只读成员、禁止访问四种类型。<br>使用项目邀请<br>如果您想让外部协作者编辑相关项目，但又不想让他介入团队内的其他项目，可以使用「项目邀请」功能。<br>通过「我的团队」-&gt;「成员&#x2F;权限」-&gt;「项目邀请」，发送邀请链接给外部协作者。被邀请者将只能看到和编辑被邀请的项目。<br>通过以上步骤，您可以自主下载Apifox并注册账号，然后生成mock接口路由和mock数据、测试接口、加入团队并设置权限。这些功能将帮助您更高效地进行API开发和测试。</p>\n","categories":[],"tags":[]}